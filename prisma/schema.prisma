// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model companies {
  id          BigInt      @id @default(autoincrement())
  name        String
  address     String
  description String
  createddate DateTime    @default(now())
  updateddate DateTime    @default(now())
  createdby   String      @default("system")
  employees   employees[]
  admins      admins[]
}

model employees {
  uuid             String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  id               BigInt             @unique @default(autoincrement())
  company          companies          @relation(fields: [companyid], references: [id])
  companyid        BigInt
  email            String             @unique
  firstname        String
  lastname         String
  position         String             @default("employee")
  salary           Float              @default(0)
  address          String             @default("Ha Noi, Viet Nam")
  dob              DateTime
  phonenumber      String             @unique
  updateddate      DateTime           @default(now())
  createdby        String             @default("admin")
  positionhistory position_history[]
  employeehistory employee_history[]
  moneyrequest    money_request[]
}

model admins {
  uuid             String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  id               BigInt             @unique @default(autoincrement())
  positionhistory  position_history[]
  email            String             @unique
  name             String
  company          companies?         @relation(fields: [companyid], references: [id])
  companyid        BigInt
  createddate      DateTime           @default(now())
  updateddate      DateTime           @default(now())
  createdby        String             @default("system")
  employeehistory employee_history[]
}

model position_history {
  id         BigInt    @id @default(autoincrement())
  adminid    admins    @relation(fields: [updateby], references: [id])
  updateby   BigInt
  employeeid BigInt
  employee   employees @relation(fields: [employeeid], references: [id])
  from       String
  to         String
  updatedate DateTime  @default(now())
}

model employee_history {
  id         BigInt    @id @default(autoincrement())
  adminid    admins    @relation(fields: [addedby], references: [id])
  addedby    BigInt
  employeeid BigInt
  employee   employees @relation(fields: [employeeid], references: [id])
  addeddate  DateTime  @default(now())
}

model money_request {
  id            BigInt    @id @default(autoincrement())
  employeeid  BigInt
  requestedby   employees @relation(fields: [employeeid], references: [id])
  amount        Float
  status        String
  requesteddate DateTime  @default(now())
}
